// This file controls server side variables which influence gameplay (which must be prefixed with 'sv_')
// It is executed whenever variables are reset (on start, and whatever 'resetvarsonend' tells it to)
//
// sv_defaultmap "" // default map, "" = random
// sv_defaultmode -1 // default game mode; -1 = random
// sv_defaultmuts -1 // default mutators; -1 = random
// sv_storyplayers 5 // number of players in story
// sv_storymaps "" // story maps
// sv_allowmaps "" // allowed maps
// sv_duelmaps "" // duel maps
// sv_mainmaps "" // deathmatch maps
// sv_ctfmaps "" // ctf maps
// sv_mctfmaps "" // multi-ctf maps
// sv_stfmaps "" // stf maps
// sv_trialmaps "" // time-trial maps
// sv_maprotate 2 // server side map rotation of above maps; 0 = off, 1 = sequence, 2 = random
// sv_maxcarry 2 // maximum number of weapons a player can carry
// sv_spawnrotate 2 // spawn point rotation; 0 = let client decide, 1 = sequence, 2 = random
// sv_spawnweapon 0 // weapon players spawn with, defaults to pistol (0)
// sv_instaweapon 8 // weapon players spawn with in instagib, defaults to special insta-rifle (8)
// sv_trialweapon 0 // weapon players spawn with in trial, defaults to melee only (0)
// sv_spawngrenades 1 // spawn with grenades; 0 = never, 1 = all but instagib/time-trial, 2 = always
// sv_spawndelay 5000 // time in milliseconds before players can respawn in most modes
// sv_instadelay 3000 // time in milliseconds before players can respawn in instagib mutated modes
// sv_trialdelay 1000 // time in milliseconds before players can respawn in trial mode
// sv_spawnprotect 3000 // time in milliseconds after spawning players cannot be damaged
// sv_instaprotect 1500 // time in milliseconds after spawning players cannot be damaged
// sv_maxhealth 100 // maximum health (in all but instagib mutated modes)
// sv_extrahealth 100 // maximum extra health (overcharge which slowly reduces back to max)
// sv_fireburntime 5500 // time in milliseconds fire burns for, try to allow an extra 500ms breathing room for sync
// sv_fireburndelay 1000 // time in milliseconds for which fire burning deals damage
// sv_fireburndamage 7 // amount of damage fire burning deals
// sv_vampire 0 // when players deal damage, they regenerate
// sv_regendelay 3000 // time in milliseconds after being damage before normal regeneration resumes
// sv_regenguard 1000 // as above, but when guarding the team affinity (flags, etc)
// sv_regentime 1000 // time in milliseconds for which regenerate gives health
// sv_regenhealth 5 // amount of health regneration gives
// sv_regenextra 10 // amount of health regeneration gives when guarding the team affinity
// sv_impulsemeter 30000 // length of the impulse meter in milliseconds
// sv_impulsecost 1000 // cost of a non-sprint impulse event
// sv_impulsecount 5 // maximum consecutive non-sprint impulse events
// sv_impulseskate 1000 // cost of an impulse skate event
// sv_impulseregen 3 // multiplier of impulse regeneration rate
// sv_itemsallowed 1 // determines if items are present in the level; 0 = never, 1 = all but instagib, 2 = always
// sv_itemdropping 1 // determines if items drop, or respawn back at their original position
// sv_itemspawntime 30000 // time in milliseconds before items (re)spawn
// sv_itemspawndelay 1000 // time in milliseconds after map start items first spawn
// sv_itemthreshold 2 // if numspawned < numclients*this, spawn one of this type
// sv_itemspawnstyle 1 // determines the timing of item spawning at map start; 0 = all at once, 1 = staggered, 2 = random
// sv_kamikaze 1 // determines the level of kamikaze events; 0 = never, 1 = holding grenade, 2 = have grenade, 3 = always
// sv_timelimit 15 // time in minutes before round ends; 0 = off
// sv_triallimit 60000 // time in milliseconds after the first player crosses the finishing line in a non-looping trial map players have to complete
// sv_intermlimit 15000 // time in milliseconds intermission lasts
// sv_votelimit 30000 // time in milliseconds intermission voting lasts
// sv_duellimit 3000 // time in milliseconds before next round in duel/survivor
// sv_duelclear 0 // determines if items are reset at the end of each round
// sv_selfdamage 1 // determines if the player can damage themselves
// sv_teamdamage 1 // determines if the player can damage team members; 0 = off, 1 = non-bots damage team, 2 = all players damage team
// sv_teambalance 2 // determines the method of team balancing; 0 = off, 1 = by number, 2 = by rank, 3 = humans vs. ai
// sv_fraglimit 0 // number of frags required to end the round (and win) in ffa modes
// sv_ctflimit 0 // number of captures required to end the round (and win) in ctf
// sv_ctfstyle 1 // determines the style of ctf play; 0 = classic touch-and-return, 1 = grab and take home, 2 = defend and reset, 3 = dominate and protect
// sv_ctfresetdelay 30000 // time in milliseconds before a dropped flag automatically resets (and penalises the team)
// sv_stflimit 0 // number of points required to end the round (and win) in stf
// sv_stffinish 0 // determines if the round ends when a team secures all flags in stf
// sv_stfpoints 1 // number of points given in stf
// sv_stfoccupy 100 // occupation multiple for determing the interval where points are given
// sv_botbalance 1 // determines bot balancing method; 0 = turn off bots, 1 = fill only with enough bots to satisfy play, 2 = populate bots to numplayers
// sv_botscale 1.0 // scale the 'numplayers' world variable which determines bot auto population
// sv_botminskill 50 // minimum randomly assigned bot skill level
// sv_botmaxskill 75 // maximum randomly assigned bot skill level
// sv_botlimit 16 // maximum number of bots allowed, regardless of any other variable/setting
// sv_gamespeed 100 // override gameplay speed
// sv_gamepaused 0 // pauses the game, automatically unset by server
// sv_forcegravity 0 // force gravity to be this instead of map defined value
// sv_forcejumpspeed 0 // force jump speed to be this instead of map defined value
// sv_forceimpulsespeed 0 // force impulse speed to be this instead of map defined value
// sv_damagescale 1.0 // scale damage by this amount
// sv_hitpushscale 1.0 // scale hit pushes by this amount
// sv_deadpushscale 2.0 // scale hit pushes by this amount when it results in a frag
// sv_wavepusharea 3.0 // multiple of explosion radius in which a 'push' wave encompasses
// sv_wavepushscale 1.0 // scale of the hitpush force used in a wavepush
// sv_multikilldelay 3000 // time in milliseconds multiple kills in a row must occur
// sv_spreecount 5 // number of consecutive frags for each spree level
// sv_dominatecount 5 // number of frags on a single player without revenge before it is considered domination
// sv_resetbansonend 1 // determines when the ban list is reset; 0 = off, 1 = just when empty, 2 = when matches end
// sv_resetvarsonend 1 // determines when these game variables are reset; 0 = off, 1 = just when empty, 2 = when matches end
//
// EOF
