// Blood Frontier: Default Configuration

exec "keymap.cfg"
exec "engine.cfg"
exec "brush.cfg"
exec "sounds.cfg"

// Game Aliases
// Modes (single integer):
//		0		Demo
//		1		Lobby
//		2		Edit
//		3		Singleplayer
//		4		Deathmatch
//		5		Base Capture
//		6		Capture the Flag
// Mutators (bitwise and):
//		0x0001	Team
//		0x0002	Instagib
//		0x0004	Duel
//		0x0008	Progressive
//		0x0010	Times Two
//		0x0020	Last Man Standing
//		0x0040	Mayhem
//		0x0080	No Items

mapcomplete				= [ complete $arg1 maps bgz ]
start					= [ mode $arg1 $arg2; map $arg3 ]; mapcomplete start

demo					= [ stopdemo; start 0 0x00 $arg1 ]; complete demo . dmo

lobby					= [ start 1 0x0000 $arg1 ]; mapcomplete lobby
edit					= [ start 2 0x0000 $arg1 ]; mapcomplete edit
mission					= [ start 3 0x0000 $arg1 ]; mapcomplete mission
deathmatch				= [ start 4 0x0000 $arg1 ]; mapcomplete deathmatch
stf						= [ start 5 0x0001 $arg1 ]; mapcomplete stf
ctf						= [ start 6 0x0001 $arg1 ]; mapcomplete ctf

instagib				= [ start 4 0x0002 $arg1 ]; mapcomplete instagib
instastf				= [ start 5 0x0003 $arg1 ]; mapcomplete instastf
instactf				= [ start 6 0x0003 $arg1 ]; mapcomplete instactf

delta_game_0 			= [ weapon -1 $arg1 ]; setcomplete delta_game_0 off

delta_edit_0			= [ editfacewentpush $arg1 1 ]; setcomplete delta_edit_0 off // Fill and Empty cube
delta_edit_1			= [ gridpower (+ $arg1 $gridpower) ]; setcomplete delta_edit_1 off
delta_edit_2			= [ editfacewentpush $arg1 0 ]; setcomplete delta_edit_2 off // push face/corners selected
delta_edit_3			= [ editfacewentpush $arg1 2 ]; setcomplete delta_edit_3 off // push corner pointed at by cursor
delta_edit_4			= [ editrotate $arg1 ]; setcomplete delta_edit_4 off // rotate 90 degrees
delta_edit_5			= [ entproperty 0 $arg1 ]; setcomplete delta_edit_5 off  // and the others
delta_edit_6			= [ edittex $arg1 ]; setcomplete delta_edit_6 off // change textures
delta_edit_9			= [ selectbrush $arg1 ]; setcomplete delta_edit_9 off // change heightmap brushes
delta_edit_10			= [ entautoview $arg1 ]; setcomplete delta_edit_10 off
delta_edit_11			= [ entproperty 0 $arg1 ]; setcomplete delta_edit_11 off
delta_edit_12			= [ entproperty 1 $arg1 ]; setcomplete delta_edit_12 off
delta_edit_13			= [ entproperty 2 $arg1 ]; setcomplete delta_edit_13 off
delta_edit_14			= [ entproperty 3 $arg1 ]; setcomplete delta_edit_14 off

bind W				[ forward ]
bind A				[ left ]
bind S				[ backward ]
bind D				[ right ]

bind UP				[ forward ]
bind DOWN			[ backward ]
bind RIGHT			[ right ]
bind LEFT			[ left ]

bind LSHIFT			[ crouch ]
bind SPACE			[ jump ]

bind MOUSE1			[ attack ]
bind MOUSE2 		[ zoom ]
bind MOUSE3			[ reload ]

bind I				[ taunt ]
bind E				[ action ]
bind R				[ reload ]
bind F				[ if (= (gamemode) 6) [ dropflags ] [ action ] ]
bind G				[ weapon 3 ]
bind Q				[ weapon 3 ]
bind Z				[ zoom ]

bind TAB			[ showscores ]

bind T				saycommand
bind BACKQUOTE		"saycommand /"
bind SLASH			"saycommand /"

bind KP_MINUS		[ conskip 1 ]
bind KP_PLUS		[ conskip -1000 ]

bind INSERT			[ addbot ]
bind DELETE			[ delbot ]
bind C				[ domodifier 9 ]

bind F1				[ if (= (gamemode) 2) [ edittoggle ] [ edit (mapname) ] ]
bind F2				[ showgui game ]
bind F5				[ setmaster 1 ]
bindvar F10			inputgrab
bind F11			[ toggleconsole ]
bind F12			[ screenshot "screenshot" ]

editbind F2			[ showtexgui ]
editbind F3			[ cleargui; showentgui ]
editbind F4			[ calclight 3 ]
editbind F5			[ recalc ]
editbind F6			[ savemap ]
editbind F7			[showgui findent]

bind 1				[ weapon 0 ]
bind 2				[ weapon 1 ]
bind 3				[ weapon 2 ]
bind 4				[ weapon 3 ]
bind 5				[ weapon 4 ]
bind 6				[ weapon 5 ]
bind 7				[ weapon 6 ]
bindvar 9			thirdperson

editbind 1 			[ domodifier 11 ]
editbind 2 			[ domodifier 12 ]
editbind 3 			[ domodifier 13 ]
editbind 4 			[ domodifier 14 ]
editbindvar 5		blankgeom
editbindvar 6		entselsnap
editbind 7			[ outline (at $outlinecolours $outlinestatus); if (= $outline 0) [sleep 1 [outlinestatus = 0]; echo "outline 0"] [echo (concat outline (+ $outlinestatus 1))]; outlinestatus = (+ $outlinestatus 1) ]
editbindvar 8		wireframe
editbindvar 9		bypassheightmapcheck
editbindvar 0		allfaces

bind KP_DIVIDE		[ togglesound ]
bind KP_MINUS		[ conskip 1 ]
bind KP_PLUS		[ conskip -1000 ]

editbind INSERT 	[ sendmap ]
editbind DELETE		[ getmap ]

modshift = 0
editbind LSHIFT		[ floatspeed 1000; modshift = 1; onrelease [ floatspeed 100; modshift = 0; ] ]
editbindmod LCTRL	passthrough
editbindmod LALT	hmapedit

bind MOUSE4			[ if (= $modshift 1) [ universaldelta 10 ] [ universaldelta 1 ] ]	// also used for editing, see below
bind MOUSE5			[ if (= $modshift 1) [ universaldelta -10 ] [ universaldelta -1 ] ]

editbind SPACE  	[ cancelsel ]
editbind MOUSE1		[ editdrag ]
editbind MOUSE3		[ selcorners ]
editbind MOUSE2		[ editextend ]

editbind N       	[ entselect insel ]
editbind M       	[ selentfindall ]
do [brush_2] //421

editbind L			[ entlink ]
editbind X			[ editflip ]
editbind C			[ editcopy ]
editbind V			[ editpaste ]
editbind U			[ editcut ]
editbind Z			[ undo; passthroughsel 0 ]
editbind I			[ redo ]
editbind H			[ if $hmapedit [ editface 1 -1 ] [ hmapedit 1 ] ]
editbind BACKSPACE	[ editdel ]

editbind G			[ domodifier 1 ] // domodifier 1 -> executes delta_edit_1
editbind F			[ domodifier 2 ] // etc...
editbind Q			[ domodifier 3 ]
editbind R			[ domodifier 4 ] 
editbind Y			[ domodifier 6 ]
editbind J 			[ domodifier 9; brushcopy = 0; ]
editbind COMMA  	[ domodifier 10; onrelease entautoview ]

editbind PERIOD		selentedit

editbindvar P 		dropwaypoints
editbindvar B		fullbright

editbind KP1 		[ editmat air ]
editbind KP2 		[ editmat clip ]
editbind KP3		[ editmat water ]
editbind KP4 		[ editmat glass ]

enttypelist = [ 
light
mapmodel
playerstart
envmap
particles
sound
spotlight
weapon
teleport
monster
trigger
pusher
base
checkpoint
camera
waypoint
announcer
trigger
connection
]

entcomplete = [ listcomplete $arg1 $enttypelist ]

// entcomplete gets defined by game
entcomplete newent
entcomplete entfind

enttypelength = (listlen $enttypelist)
enttypeselect = [     
  n = $enttypelength
  next = (+ (listindex $enttypelist (et)) $arg1)
  if (< $next 0)  [ next = (- $n 1) ]
  if (= $next $n) [ next = 0 ]
  next = (at $enttypelist $next)
  entset $next (ea 0) (ea 1) (ea 2) (ea 3) 
]

////// Entity primary actions /////////

ent_action_base           = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_teleport       = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_monster        = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_mapmodel       = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_spotlight      = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_light          = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_pusher         = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_checkpoint     = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_playerstart    = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_envmap         = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_particles      = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_sound          = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_cycle          = [ entset ( if ( > $arg1 -1 ) [ result $arg2 ] [ result $arg3 ] ) ]

exec "menus.cfg" // keep this here, it uses some of the stuff above
