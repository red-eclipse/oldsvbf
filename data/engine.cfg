// Blood Frontier Default Config

exec data/keymap.cfg
exec data/stdedit.cfg
exec data/brush.cfg

bind T "saycommand"
bind BACKQUOTE "saycommand /"
bind SLASH "saycommand /"

bind KP_MINUS "conskip 1"
bind KP_PLUS "conskip -1000"

alias togglesound [ if (> $soundvol 0) [ soundvol 0; echo "sound off" ] [ soundvol 255; echo "sound on" ] ]
bind KP_DIVIDE [ togglesound ]

alias togglemusic [ if (> $musicvol 0) [ musicvol 0; echo "music off" ] [ musicvol 128; echo "music on" ] ]
bind KP_MULTIPLY [ togglemusic ]

bindvar F1 paused
bindvar F10 grabmouse

bind F11 "toggleconsole"

alias screen [
	hidehud 1
	sleep 100 [ screenshot; echo "screenshot saved"; hidehud 0; ]
]
bind F12 "screen"

bind E [ edittoggle ]

editbind F1 [ history 0 ]
editbind F7 [ autosave ]

editbind KP1 [ editmat air ]
editbind KP2 [ editmat clip ]
editbind KP3 [ editmat water ]
editbind KP4 [ editmat glass ]

editbind INSERT [ sendmap ]
editbind DELETE [ getmap ]

alias entchg [
  a0 = (entattr 0)
  a1 = (entattr 1)
  a2 = (entattr 2)
  a3 = (entattr 3)
  do [ a@arg1 = @arg2 ]
  entedit (enttype) $a0 $a1 $a2 $a3
]

noauto = 0
alias autosave [
	if (= $noauto 0) [
		savebak 1;
		savecurrentmap;
		savebak 2;
		sleep 600000 [ autosave ]
	] [	noauto = 0 ]
]
alias stopauto [ noauto = 1 ]

defaultmodifier = 0
modifier = $defaultmodifier
domodifier = [ modifier = $arg1; onrelease [ modifier = $defaultmodifier ] ]

universaldelta = [
  do [delta_@(if $editing [ result edit ] [ result game ])_@modifier @arg1]
]

bind MOUSE4 "universaldelta 1"	// also used for editing, see below
bind MOUSE5 "universaldelta -1"

editbind SPACE  [ cancelsel; passthroughsel 0 ] // meh.. will need to make better fix
editbind MOUSE1 "editdrag"
editbind MOUSE3 "selcorners"
editbind MOUSE2 "editextend"

editbind N        "entselect insel"
editbind M        "selentfindall"

editbind LSHIFT   "floatspeed 1000; onrelease [ floatspeed 100 ]"
editbindmod LCTRL passthrough
editbindmod LALT  passthrough
editbindmod RALT  passthrough

editbind X editflip
editbind C editcopy
editbind V editpaste
editbind Z editcut
editbind U [ undo; passthroughsel 0]
editbind I redo

brushcopy = 0
editbind H [ getheightmap; passthroughsel 1; if (= $brushcopy 0) [ selectbrush 0 ]; ]
editbind K [ copybrush; brushcopy = 1; ]

editbind BACKSPACE editdel

editbind G "domodifier 1" // domodifier 1 -> executes delta_edit_1
editbind F "domodifier 2" // etc...
editbind Q "domodifier 3"
editbind R "domodifier 4" 
editbind Y "domodifier 6"
editbind B [ domodifier 9; brushcopy = 0; ]
editbind J [ domodifier 9; brushcopy = 0; ]
editbind COMMA  [ domodifier 10; onrelease entautoview ]

delta_edit_0 = [ editfacewentpush $arg1 1 ] // Fill and Empty cube
delta_edit_1 = [ gridpower (+ $arg1 $gridpower) ]
delta_edit_2 = [ editfacewentpush $arg1 0 ] // push face/corners selected
delta_edit_3 = [ editfacewentpush $arg1 2 ] // push corner pointed at by cursor
delta_edit_4 = [ editrotate $arg1 ] // rotate 90 degrees
delta_edit_5 = [ entproperty 0 $arg1 ]  // and the others
delta_edit_6 = [ edittex $arg1 ] // change textures
delta_edit_9 = [ selectbrush $arg1 ] // change heightmap brushes
delta_edit_10 = [ entautoview $arg1 ]

air = [ editmat air ]
water = [ editmat water ]
clip = [ editmat clip ]
glass = [ editmat glass ]
noclip = [ editmat noclip ]

editbindvar 6 entselsnap
editbindvar 7 outline
editbindvar 8 wireframe
bindvar 9 thirdperson
editbindvar 0 allfaces
bindvar L fullbright

editbind PERIOD selentedit

editbind TAB [ cleargui; showentgui ]
editbind F2 showtexgui
editbind F3 calclight
editbind F4 calclight 3
editbind F5 recalc
editbind F6 savemap

editbind P [ showentdir (= $showentdir 0); showentradius (= $showentradius 0) ]

editbind 1 [ domodifier 101 ]
editbind 2 [ domodifier 102 ]
editbind 3 [ domodifier 103 ]
editbind 4 [ domodifier 104 ]

delta_edit_101 = [ entproperty 0 $arg1 ]
delta_edit_102 = [ entproperty 1 $arg1 ]
delta_edit_103 = [ entproperty 2 $arg1 ]
delta_edit_104 = [ entproperty 3 $arg1 ]

causticnum 50

zooming = 0
zoomsize = 10
zoomhair = 750
zoomsens = 4

zoomcrosshairsize = $crosshairsize
zoomsensitivityscale = $sensitivityscale
zoomfov = $fov
zoomhudgun = $hudgun

alias zoomer [
	changed = 0
	chamt = (div (- $zoomhair $zoomcrosshairsize) 10)
	fvamt = (div (- $zoomfov $zoomsize) 10)
	fvmax = 120; if (= $thirdperson 1) [ fvmax = 100 ]

	if (= $zooming 1) [
		if (> $zoomhair $crosshairsize) [
			i = (+ $crosshairsize $chamt)
			if (< $i 1000) [ crosshairsize $i ] [ crosshairsize 1000 ]
			if (< $zoomhair $crosshairsize) [ crosshairsize $zoomhair ] [ changed = 1 ]
		]
		if (< $zoomsize $fov) [
			i = (- $fov $fvamt)
			if (> $i 10) [ fov $i ] [ fov 10 ]
			if (> $zoomsize $fov) [ fov $zoomsize ] [ changed = 1 ]
		]
		if (= $changed 1) [ sleep 10 [ zoomer ] ]
	]
	if (= $zooming 2) [ 
		if (< $zoomcrosshairsize $crosshairsize) [
			i = (- $crosshairsize $chamt)
			if (> $i 0) [ crosshairsize $i ] [ crosshairsize 1 ]
			if (> $zoomcrosshairsize $crosshairsize) [ crosshairsize $zoomcrosshairsize ] [ changed = 1 ]
		]
		if (> $zoomfov $fov) [
			i = (+ $fov $fvamt)
			if (< $i $fvmax) [ fov $i ] [ fov $fvmax ]
			if (< $zoomfov $fov) [ fov $zoomfov ] [ changed = 1 ]
		]
		if (= $changed 1) [
			sleep 10 [ zoomer ]
		] [
			hudgun $zoomhudgun
			sensitivityscale $zoomsensitivityscale
			loadcrosshair "packages/textures/crosshair.png"
			zooming = 0
		]
	]
]

alias zoom [
	zoomcrosshairsize = $crosshairsize
	zoomsensitivityscale = $sensitivityscale
	zoomfov = $fov
	zoomhudgun = $hudgun

	if (= $zooming 0) [
		hudgun 0
		sensitivityscale $zoomsens
		zooming = 1
		loadcrosshair "packages/textures/crosshair_zoom.png"
		zoomer
	]

	onrelease [
		if (= $zooming 1) [
			zooming = 2
			zoomer
		]
	]
]
loadcrosshair "packages/textures/crosshair_zoom.png"
loadcrosshair "packages/textures/crosshair.png"
