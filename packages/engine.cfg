defaultmodifier = 0
modifier = $defaultmodifier
domodifier = [ modifier = $arg1; onrelease [ modifier = $defaultmodifier ] ]

universaldelta = [
  do [delta_@(if $editing [ result edit ] [ result game ])_@modifier @arg1]
]

delta_edit_0 = [ editfacewentpush $arg1 1 ] // Fill and Empty cube
delta_edit_1 = [ gridpower (+ $arg1 $gridpower) ]
delta_edit_2 = [ editfacewentpush $arg1 0 ] // push face/corners selected
delta_edit_3 = [ editfacewentpush $arg1 2 ] // push corner pointed at by cursor
delta_edit_4 = [ editrotate $arg1 ] // rotate 90 degrees
delta_edit_5 = [ entproperty 0 $arg1 ]  // and the others
delta_edit_6 = [ edittex $arg1 ] // change textures
delta_edit_9 = [ selectbrush $arg1 ] // change heightmap brushes
delta_edit_10 = [ entautoview $arg1 ]

delta_edit_11 = [ entproperty 0 $arg1 ]
delta_edit_12 = [ entproperty 1 $arg1 ]
delta_edit_13 = [ entproperty 2 $arg1 ]
delta_edit_14 = [ entproperty 3 $arg1 ]

listcomplete editmat "air water clip glass noclip lava"
air = [ editmat air ]
water = [ editmat water ]
clip = [ editmat clip ]
glass = [ editmat glass ]
noclip = [ editmat noclip ]
lava = [ editmat lava ]

//////// Entity Editing ///////////////

// the entity type of current selection
et = [ at (entget) 0 ]

// access the given attribute of selected ent
ea = [ at (entget) (+ $arg1 1) ]

entcomplete = [ listcomplete $arg1 "light mapmodel playerstart envmap particles sound spotlight weapon teleport teledest monster carrot jumppad base respawnpoint camera waypoint" ]
entcomplete newent
entcomplete entfind

// clear ents of given type
clearents = [ 
  if $editing [
    entcancel
    entselect [ strcmp (et) $arg1 ]; 
    echo Deleted (enthavesel) $arg1 entities; 
    delent
  ] 
]

// replace all ents that match current selection
// with the values given
replaceents = [
  if $editing [
    entfind @(entget)
    entset @arg1 @arg2 @arg3 @arg4 @arg5
    echo Replaced (enthavesel) entities  
  ]
]

selentedit      = [ "saycommand" ( concatword "/entset " (entget) ) ] 
selreplaceents  = [ "saycommand" ( concatword "/replaceents " (entget) ) ]  
selentfindall   = [ do [ @( concatword "entfind " (entget) ) ] ]

// modify given attribute of ent by a given amount
// arg1 attribute
// arg2 value
entproperty = [
  entloop [
    a0 = (ea 0)
    a1 = (ea 1)
    a2 = (ea 2)
    a3 = (ea 3)
    do [a@arg1 = (+ (ea @arg1) @arg2)]
    entset (et) $a0 $a1 $a2 $a3
  ]
]

enttypelist = [ 
	"light" "mapmodel" "playerstart"
	"envmap" "particles" "sound" "spotlight"
	"weapon" "teleport" "teledest"
	"monster" "carrot" "jumppad"
	"base" "respawnpoint"
	"camera" "waypoint" ""
]

enttypelength = (listlen $enttypelist)

listindex = [
  s = 0
  n = (listlen $arg1)
  loop i $n [
    if (strcmp $arg2 (at $arg1 $i)) [
      s = $i
    ]
  ]
  result $s
]

enttypeselect = [     
  n = $enttypelength
  next = (+ (listindex $enttypelist (et)) $arg1)
  if (< $next 0)  [ next = (- $n 1) ]
  if (= $next $n) [ next = 0 ]
  next = (at $enttypelist $next)
  entset $next (ea 0) (ea 1) (ea 2) (ea 3) 
]

////// Entity primary actions /////////

ent_action_base           = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_carrot         = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_teleport       = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_teledest       = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_monster        = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_mapmodel       = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_spotlight      = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_light          = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_jumppad        = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_respawnpoint   = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_playerstart    = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_envmap         = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_particles      = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_sound          = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_cycle          = [ entset ( if ( > $arg1 -1 ) [ result $arg2 ] [ result $arg3 ] ) ]

//////// Copy and Paste //////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and ents  -> paste cubes and ents. same relative positions
// 3. select only ents       -> paste last selected ent. if ents are selected, replace attrs as paste

opaquepaste = 1
entcopybuf = ""

entreplace   = [ 
  do [
    if (enthavesel) [] [ newent @entcopybuf ]
    entset @entcopybuf 
  ]
]

editcopy   = [
  if (|| havesel [! (enthavesel)]) [
    entcopybuf = ""
    entcopy
    copy
  ] [
    entcopybuf = (entget)
  ]
]

editpaste  = [ 
  cancelpaste = (! (|| enthavesel havesel));
  if (strcmp "" $entcopybuf) [
    pastehilite
    reorient // temp; real fix will be in octaedit
    onrelease [ 
      if (opaquepaste) delcube 
      paste
      entpaste
      if ($cancelpaste) [ cancelsel ] 
    ] 
  ] [
    entreplace
    if ($cancelpaste) [ cancelsel ] 
  ] 
]

/////// Selection ///////////////

equaltype  = [
  if (strcmp * $arg1) [ result 1 ] [
    result (strcmp (et) $arg1)
  ]
]

equalattr  = [
  if (strcmp * $arg2) [ result 1 ] [
    result (= (ea $arg1) $arg2)
  ]
]

// select ents with given properties
// '*' is wildcard
entfind    = [ 
  if (= ($numargs) 1) [
    entselect     [ equaltype @@arg1 ]     
  ] [ if (= ($numargs) 2) [
    entselect [ && (equaltype @@arg1)         [equalattr 0 @@arg2] ]
  ] [ if (= ($numargs) 3) [
    entselect [ && (equaltype @@arg1) (&&     [equalattr 0 @@arg2] [equalattr 1 @@arg3]) ]
  ] [ if (= ($numargs) 4) [
    entselect [ && (equaltype @@arg1) (&& (&& [equalattr 0 @@arg2] [equalattr 1 @@arg3])     [equalattr 2 @@arg4]) ]
  ] [
    entselect [ && (equaltype @@arg1) (&& (&& [equalattr 0 @@arg2] [equalattr 1 @@arg3]) (&& [equalattr 2 @@arg4] [equalattr 3 @@arg5])) ]
  ]]]]
]

lse        = [
  line = ""
  count = 0
  entloop [
    line  = ( concatword $line (entget) "		" )
    count = ( + $count 1 )
    if (> $count 4) [
      echo $line
      line = ""
      count = 0
    ]
  ]
  if (> $count 0 ) [ echo $line ]
  echo (enthavesel) entities selected
]

enttoggle  = [ entmoving 1; entmoving 0; ]
entaddmove = [ entmoving 2 ]

grabbing = 0

hmapctrl   = [ hmapedit $arg1; passthrough $arg1]
drag       = [ dragging 1; onrelease [ dragging 0 ] ]
corners    = [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0 ] ]
entadd     = [ entaddmove; entmoving 0; ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entaddmove; onrelease [entmoving 0]; result $entmoving ] 

editdrag   = [ cancelsel; || (entdrag) [ drag ] ]
selcorners = [ if ($hmapedit) [ hmapselect ] [ cancelsel; || (entdrag) [ corners ] ] ]
editextend = [ || entdrag [ selextend; reorient; editmove ] ]

editmovewith    = [
  if (havesel) [
    || (editmove) [ @arg1 ]
    onrelease [ moving 0; dragging 0 ]
  ] [
    @arg1
  ]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]

////// Other Editing commands /////////

editfacewentpush = [ 
  
  if (|| [havesel] [! (enthavesel)] ) [
    if ($moving) [ 
      pushsel $arg1 
    ] [ 
      entcancel
      editface $arg1 $arg2
    ] 
  ] [
      if ($entmoving) [ entpush $arg1 ] [ ent_action_@(et) ]
  ]
]

entswithdirection = "playerstart mapmodel teledest camera"

inlist = [
  r = 0
  n = ( listlen $arg2 )
  loop i $n [
    if (strcmp $arg1 (at $arg2 $i)) [
      r = 1 
    ]
  ]
  result $r
]

entdirection = [
  if ( && (enthavesel) [ = (havesel) 0 ] ) [
    if (inlist (et) $entswithdirection) [
      if (> $arg1 0) [
        entproperty 0 @@arg2
        if (> (ea 0) 360) [ entproperty 0 -360 ]          
      ] [
        entproperty 0 -@@arg2
        if (< (ea 0) 0) [ entproperty 0 360 ]
      ]
    ]
    result 1
  ] [
    result 0
  ]
]

editdel    = [ delcube; delent ]
editflip   = [ flip; entflip ]

editrotate = [ 
  || [ entdirection $arg1 15 ] [ 
      rotate $arg1
      entrotate $arg1 
    ] 
]

editcut    = [  
  hadselection = (havesel)
  moving 1
  if ($moving) [
    copy;     entcopy
    delcube;  delent
    onrelease [ 
      moving 0
      paste
      entpaste
      if ( ! $hadselection ) [ cancelsel ]
    ]
  ]
]

passthrough = [ 
  passthroughsel $arg1; 
  if ($arg1) [
    passthroughcube_bak = $passthroughcube
    passthroughcube 1
  ] [
    passthroughcube $passthroughcube_bak
  ]
  entcancel 
  if ( setting_entediting ) [ entediting ( ! $arg1 ) ]
  
]

edithud = [
    if (enthavesel) [concatword (entget) " : " (enthavesel) " selected"]
]

alias entchg [
  a0 = (entattr 0)
  a1 = (entattr 1)
  a2 = (entattr 2)
  a3 = (entattr 3)
  do [ a@arg1 = @arg2 ]
  entedit (enttype) $a0 $a1 $a2 $a3
]

noauto = 0
alias autosave [
	if (= $noauto 0) [
		savebak 1;
		savecurrentmap;
		savebak 2;
		sleep 600000 [ autosave ]
	] [	noauto = 0 ]
]
alias stopauto [ noauto = 1 ]

alias togglesound [ if (> $soundvol 0) [ soundvol 0; echo "sound off" ] [ soundvol 255; echo "sound on" ] ]
alias togglemusic [ if (> $musicvol 0) [ musicvol 0; echo "music off" ] [ musicvol 128; echo "music on" ] ]

alias screen [
	hidehud 1
	sleep 100 [ screenshot; echo "screenshot saved"; hidehud 0; ]
]

// joystick zoom in/out
// adapted from the fabulous rzoom script by rootnis
alias joyzoomhg $hudgun
alias joyzoomprevfov $fov
alias joyzoomprevsens $sensitivity
alias joyrzoom [
  if ( > $fov 12 ) [
    fov ( - $fov 4 )
    if ( > $sensitivity 3 ) [ sensitivity ( - $sensitivity 1 ) ]
    if ( continue ) [ sleep 25 joyrzoom ]
  ]
]
alias joyzoom [
  alias continue 1
  if ( < $fov $joyzoomprevfov ) [ fov $joyzoomprevfov; sensitivity $joyzoomprevsens; hudgun $joyzoomhg ] [ hudgun 0; joyrzoom ]
  onrelease [ alias continue 0 ]
]


alias joysensitivitymore [
  if ( < $joysensitivity 10 ) [
    joysensitivity ( + $joysensitivity 1 );
    echo "joysensitivity: " $joysensitivity
  ]
]

alias joysensitivityless [
  if ( > $joysensitivity 1 ) [
    joysensitivity ( - $joysensitivity 1 );
    echo "joysensitivity: " $joysensitivity
  ]
]

joyaction "attack"                           "attack"
joyaction "jump"                             "jump"
joyaction "move left"                        "left"
joyaction "move right"                       "right"
joyaction "move forward"                     "forward"
joyaction "move backward"                    "backward"
joyaction "change weapon (any)"              "weapon"
joyaction "change weapon (1-3)"              "weapon 1 2 3"
joyaction "change weapon (4-6)"              "weapon 4 5 6"
joyaction "change weapon (fist)"             "weapon 0"
joyaction "change weapon (shotgun)"          "weapon 1"
joyaction "change weapon (machine gun)"      "weapon 2"
joyaction "change weapon (rocket launcher)"  "weapon 3"
joyaction "change weapon (rifle)"            "weapon 4"
joyaction "change weapon (grenade launcher)" "weapon 5"
joyaction "change weapon (pistol)"           "weapon 6"
joyaction "zoom in/out"                      "joyzoom"
joyaction "increase joystick sensitivity"    "joysensitivitymore"
joyaction "decrease joystick sensitivity"    "joysensitivityless"
joyaction "show scores"                      "showscores"
joyaction "main menu"                        "showgui main"
joyaction "joystick menu"                    "joymenu"
joyaction "hide menu"                        "cleargui"
joyaction "screenshot"                       "screenshot"
